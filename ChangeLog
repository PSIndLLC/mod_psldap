Revision 0.78
===================
Adjust DSML_psldap.js to address IE failure to implement importNode - fixes updates to records through DSML_editform.xsl

Revision 0.77
===================
Enable processing of parameters sent through both GET and POST to module.

Created mechanism to handle LDAP search, add, modify, and delete operations.

Created DSML generation mechanism to expose new LDAP interface.

Created XSL templates to apply to DSML to facilitate interactions through the new interfaces.

Revision 0.76
===================
Fixed directory and server initialization routines - feedback accounted for.

Revision 0.75
===================
Fixed directory and server initialization routines - untested.

Revision 0.74
===================
Recognized failure to provide credentials as an auth failure, allowing denial after three attempts to authenticate without credentials.

Changed authorization handler to check for existence of user key definition and to decline authorization handling if the key is not defined. Authentication had already been checking this condition. This fixes a crash in the module.

Addition of configuration parameter, PsLDAPEnableAuth to control whether or not A&A is enabled. Set to 'on' by default.

Changed require group parsing to recognize group names with spaces when they are quoted with either single or double quotes. The type of quote used to delineate the group may not be used in the group name.

	
Revision 0.73
===================
Implemented caching array in shared memory leveraging the apache ap_mm APIs.

Addition of caching, controlled by the PsLDAPAuthUseCache parameter, set to off by default

Reuse of existing LDAP connections implemented in acquiring authorization data to improve overall performance in authorization phase.
	
Addition of PsLDAPAuthCookieDomain. The default is to let the cookie domain default to the server domain

Initialization code has been added for Apache 2.0 (Courtesy Gunter Knauf)

Reorganized code to improve readability of mixed Apache 2.0 and Apache 1.3 compatible implementation


Revision 0.71
===================
Addition of cookie based authentication against LDAP server using forms to 
collect the authentication data.

Made form data accessible to all subrequests by adding it to the subprocess_env
table immediately after acquisition.

Addition of ability to recurse up request_rec chain to acquire authentication
data

Created mechanism to identify pending changes to current record when ldap
records are updated through forms (experimental - not exposed).

	
Revision 0.70
===================
Initial work started on the processing of LDAP requests within the module

	
Revision 0.63
===================
Addition of LDAP group authentication through the addition of the following
parameters: PsLDAPUseLDAPGroups, PsLDAPUserGroupAttr, PsLDAPGroupMemberAttr,
PsLDAPGroupNameAttr. The default is to not use LDAP based group authorization.



Revision 0.62
===================
	
Changed auth_ldapsearchscope member of ldap_auth_config_rec. Implemented a new mechanism to initialize the value on reading from the config file.

Addition of AuthLDAPBindAsFoundUser configuration parameter to bind as the user found in the filter. This differs from the AuthLDAPBindAsUser functionality as it does not assume the search base concatenated to the user key represents the DN. It should be noted that the password need only match the first eight letters when this mechanism is employed.

Addition of AuthLDAPBindMethod to allow binding to LDAP servers implementing kerberos authentication.

Changed AuthLDAPSearchScope parameter to be initialized in the ldap_auth_config_rec structure directly.

Changed get_ldap_val to acquire only the requested attribute from the ldap record. This must be done to allow the module to function when authenticating against a highly secure ldap server that denies access by field.

Replaced calls to ldap_open with ldap_init to conform with deprecation of ldap_open.

Addition of extended information regarding the ldap errors on searches.

Fixed attribute value return to concatenate all values. This fixed false authorization failures that occurred when more than one group attribute instance appears in a record.

Repaired hole in returning AUTH_REQUIRED for unencrypted password comparisons when DECLINED should have been returned. This was occurring regardless of the setting of AuthLDAPAuthoritative. Repaired a similar hole in the group based authorization.

Changed group validation to allow the user to be authenticated if no group is identified and no group attribute is identified.

